{"ast":null,"code":"import _classCallCheck from \"/Users/TannerSeramur/CodeFellows/401/labs/35-project-cms/starter-code-cms-redux/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/TannerSeramur/CodeFellows/401/labs/35-project-cms/starter-code-cms-redux/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/TannerSeramur/CodeFellows/401/labs/35-project-cms/starter-code-cms-redux/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/TannerSeramur/CodeFellows/401/labs/35-project-cms/starter-code-cms-redux/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/TannerSeramur/CodeFellows/401/labs/35-project-cms/starter-code-cms-redux/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/TannerSeramur/CodeFellows/401/labs/35-project-cms/starter-code-cms-redux/src/components/cms/records.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { When } from \"../if\";\nimport * as actions from \"./actions.js\";\nvar styles = {\n  clickable: {\n    cursor: \"pointer\"\n  },\n  delete: {\n    color: \"red\",\n    cursor: \"pointer\",\n    marginLeft: \".5em\"\n  }\n};\nvar API = process.env.REACT_APP_API;\n\nvar Records =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Records, _React$Component);\n\n  function Records() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Records);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Records)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.getRecord = function (id) {\n      console.log(id, 'hi id');\n      var url = \"\".concat(API, \"/\").concat(_this.props.model, \"/\").concat(id);\n\n      _this.props.getRecord(url);\n    };\n\n    _this.deleteRecord = function (id) {\n      var url = \"\".concat(API, \"/\").concat(_this.props.model, \"/\").concat(id);\n\n      _this.props.deleteRecord(_this.props.model, id, url);\n    };\n\n    return _this;\n  }\n\n  _createClass(Records, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(When, {\n        condition: this.props.model,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, this.props.records.map(function (record, i) {\n        return React.createElement(\"li\", {\n          key: record._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          style: styles.clickable,\n          onClick: function onClick() {\n            return _this2.getRecord(record._id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, record.name), React.createElement(\"span\", {\n          style: styles.delete,\n          onClick: function onClick() {\n            return _this2.deleteRecord(record._id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, \"x\"));\n      })), React.createElement(\"button\", {\n        onClick: this.props.clearRecord,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"+\"));\n    }\n  }]);\n\n  return Records;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    records: state.records.records,\n    model: state.records.model\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, getState) {\n  return {\n    getRecord: function getRecord(url) {\n      return dispatch(actions.getRecord(url));\n    },\n    deleteRecord: function deleteRecord(model, id, url) {\n      return dispatch(actions.destroy(model, id, url));\n    },\n    clearRecord: function clearRecord() {\n      return dispatch(actions.clearRecord());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Records);","map":{"version":3,"sources":["/Users/TannerSeramur/CodeFellows/401/labs/35-project-cms/starter-code-cms-redux/src/components/cms/records.js"],"names":["React","connect","When","actions","styles","clickable","cursor","delete","color","marginLeft","API","process","env","REACT_APP_API","Records","getRecord","id","console","log","url","props","model","deleteRecord","records","map","record","i","_id","name","clearRecord","Component","mapStateToProps","state","mapDispatchToProps","dispatch","getState","destroy"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { When } from \"../if\";\n\nimport * as actions from \"./actions.js\";\n\nconst styles = {\n  clickable: { cursor: \"pointer\" },\n  delete: {\n    color: \"red\",\n    cursor: \"pointer\",\n    marginLeft: \".5em\"\n  }\n};\n\nconst API = process.env.REACT_APP_API;\n\nclass Records extends React.Component {\n  getRecord = id => {\n    console.log(id, 'hi id');\n    let url = `${API}/${this.props.model}/${id}`;\n    this.props.getRecord(url);\n  };\n\n  deleteRecord = id => {\n    let url = `${API}/${this.props.model}/${id}`;\n    this.props.deleteRecord(this.props.model, id, url);\n  };\n\n  render() {\n    return (\n      <When condition={this.props.model}>\n        <ul>\n          {this.props.records.map((record, i) => (\n            <li key={record._id}>\n              <span\n                style={styles.clickable}\n                onClick={() => this.getRecord(record._id)}\n              >\n                {record.name}\n              </span>\n              <span\n                style={styles.delete}\n                onClick={() => this.deleteRecord(record._id)}\n              >\n                x\n              </span>\n            </li>\n          ))}\n        </ul>\n        <button onClick={this.props.clearRecord}>+</button>\n      </When>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  records: state.records.records,\n  model: state.records.model\n});\n\nconst mapDispatchToProps = (dispatch, getState) => ({\n  getRecord: url => dispatch(actions.getRecord(url)),\n  deleteRecord: (model, id, url) => dispatch(actions.destroy(model, id, url)),\n  clearRecord: () => dispatch(actions.clearRecord())\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Records);\n"]},"metadata":{},"sourceType":"module"}