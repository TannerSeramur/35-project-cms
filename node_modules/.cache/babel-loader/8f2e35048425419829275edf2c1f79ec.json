{"ast":null,"code":"import superagent from \"superagent\";\nexport var setModel = function setModel(model) {\n  return {\n    type: \"MODEL\",\n    payload: model\n  };\n};\nexport var getSchema = function getSchema(model, url) {\n  return function (dispatch) {\n    superagent.get(url).then(function (data) {\n      dispatch(runGetSchema({\n        model: model,\n        schema: data.body\n      }));\n    });\n  };\n};\n\nvar runGetSchema = function runGetSchema(payload) {\n  return {\n    type: \"SCHEMA\",\n    payload: payload\n  };\n};\n\nexport var getModels = function getModels(url) {\n  return function (dispatch) {\n    superagent.get(url).then(function (data) {\n      dispatch(runGetModels(data.body));\n    });\n  };\n};\n\nvar runGetModels = function runGetModels(payload) {\n  return {\n    type: \"MODELS\",\n    payload: payload\n  };\n};\n\nexport var getRecords = function getRecords(url) {\n  superagent.get(url).then(function (data) {\n    dispatch(runGetRecords(data.body.results));\n  });\n};\n\nvar runGetRecords = function runGetRecords(payload) {\n  return {\n    type: \"RECORDS\",\n    payload: payload\n  };\n};\n\nexport var getRecord = function getRecord(url) {\n  return function (dispatch) {\n    superagent.get(url).then(function (data) {\n      dispatch(runGetRecord(data.body));\n    });\n  };\n};\n\nvar runGetRecord = function runGetRecord(payload) {\n  return {\n    type: \"RECORD\",\n    payload: payload\n  };\n};\n\nexport var post = function post(model, url, record) {\n  return function (dispatch) {\n    superagent.post(url).send(record).then(function (data) {\n      dispatch(runPost({\n        model: model,\n        record: data.body\n      }));\n    });\n  };\n};\n\nvar runPost = function runPost(payload) {\n  return {\n    type: \"POST\",\n    payload: payload\n  };\n};\n\nexport var put = function put(model, url, record) {\n  return function (dispatch) {\n    superagent.put(url).send(record).then(function (data) {\n      dispatch(runPut({\n        model: model,\n        record: data.body\n      }));\n    });\n  };\n};\n\nvar runPut = function runPut(payload) {\n  return {\n    type: \"PUT\",\n    payload: payload\n  };\n};\n\nexport var destroy = function destroy(model, id, url) {\n  return function (dispatch) {\n    superagent.delete(url).then(function (data) {\n      dispatch(runDestroy({\n        model: model,\n        id: id\n      }));\n    });\n  };\n};\n\nvar runDestroy = function runDestroy(payload) {\n  return {\n    type: \"DELETE\",\n    payload: payload\n  };\n};\n\nexport var clearRecord = function clearRecord() {\n  return {\n    type: \"CLEAR\"\n  };\n};","map":{"version":3,"sources":["/Users/TannerSeramur/CodeFellows/401/labs/35-project-cms/starter-code-cms-redux/src/components/cms/actions.js"],"names":["superagent","setModel","model","type","payload","getSchema","url","dispatch","get","then","data","runGetSchema","schema","body","getModels","runGetModels","getRecords","runGetRecords","results","getRecord","runGetRecord","post","record","send","runPost","put","runPut","destroy","id","delete","runDestroy","clearRecord"],"mappings":"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","sourcesContent":["import superagent from \"superagent\";\n\nexport const setModel = model => {\n  return {\n    type: \"MODEL\",\n    payload: model\n  };\n};\n\nexport const getSchema = (model, url) => dispatch => {\n  superagent.get(url).then(data => {\n    dispatch(runGetSchema({ model: model, schema: data.body }));\n  });\n};\n\nconst runGetSchema = payload => {\n  return {\n    type: \"SCHEMA\",\n    payload: payload\n  };\n};\n\nexport const getModels = url => dispatch => {\n  superagent.get(url).then(data => {\n    dispatch(runGetModels(data.body));\n  });\n};\n\nconst runGetModels = payload => {\n  return {\n    type: \"MODELS\",\n    payload: payload\n  };\n};\n\nexport const getRecords = url => {\n  superagent.get(url).then(data => {\n    dispatch(runGetRecords(data.body.results));\n  });\n};\n\nconst runGetRecords = payload => {\n  return {\n    type: \"RECORDS\",\n    payload: payload\n  };\n};\n\nexport const getRecord = url => dispatch => {\n  superagent.get(url).then(data => {\n    dispatch(runGetRecord(data.body));\n  });\n};\n\nconst runGetRecord = payload => {\n  return {\n    type: \"RECORD\",\n    payload: payload\n  };\n};\n\nexport const post = (model, url, record) => dispatch => {\n  superagent\n    .post(url)\n    .send(record)\n    .then(data => {\n      dispatch(runPost({ model, record: data.body }));\n    });\n};\n\nconst runPost = payload => {\n  return {\n    type: \"POST\",\n    payload: payload\n  };\n};\n\nexport const put = (model, url, record) => dispatch => {\n  superagent\n    .put(url)\n    .send(record)\n    .then(data => {\n      dispatch(runPut({ model, record: data.body }));\n    });\n};\n\nconst runPut = payload => {\n  return {\n    type: \"PUT\",\n    payload: payload\n  };\n};\n\nexport const destroy = (model, id, url) => dispatch => {\n  superagent.delete(url).then(data => {\n    dispatch(runDestroy({ model, id }));\n  });\n};\n\nconst runDestroy = payload => {\n  return {\n    type: \"DELETE\",\n    payload: payload\n  };\n};\n\nexport const clearRecord = () => {\n  return {\n    type: \"CLEAR\"\n  };\n};\n"]},"metadata":{},"sourceType":"module"}