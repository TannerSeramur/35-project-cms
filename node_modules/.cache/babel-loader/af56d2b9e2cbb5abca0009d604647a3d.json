{"ast":null,"code":"import _classCallCheck from \"/Users/TannerSeramur/CodeFellows/401/labs/35-project-cms/starter-code-cms-redux/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/TannerSeramur/CodeFellows/401/labs/35-project-cms/starter-code-cms-redux/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/TannerSeramur/CodeFellows/401/labs/35-project-cms/starter-code-cms-redux/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/TannerSeramur/CodeFellows/401/labs/35-project-cms/starter-code-cms-redux/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/TannerSeramur/CodeFellows/401/labs/35-project-cms/starter-code-cms-redux/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/TannerSeramur/CodeFellows/401/labs/35-project-cms/starter-code-cms-redux/src/components/cms/record.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport Form from \"react-jsonschema-form\";\nimport { When } from \"../if\";\nimport * as actions from \"./actions.js\";\nvar API = process.env.REACT_APP_API; // Auto-Hide some of the mongo specific fields\n\nvar uiSchema = {\n  _id: {\n    \"ui:widget\": \"hidden\"\n  },\n  __v: {\n    \"ui:widget\": \"hidden\"\n  }\n};\n\nvar Record =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Record, _React$Component);\n\n  function Record(props) {\n    var _this;\n\n    _classCallCheck(this, Record);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Record).call(this, props));\n\n    _this.handleError = function (error) {\n      console.error(error);\n    };\n\n    _this.handleSubmit = function (form) {\n      if (form.formData._id) {\n        var url = \"\".concat(API, \"/\").concat(_this.props.model, \"/\").concat(form.formData._id);\n\n        _this.props.put(_this.props.model, url, form.formData);\n      } else {\n        var _url = \"\".concat(API, \"/\").concat(_this.props.model);\n\n        _this.props.post(_this.props.model, _url, form.formData);\n      }\n    };\n\n    _this.state = {\n      schemas: {}\n    };\n    return _this;\n  } // Runs whenever props change (pre-render)\n\n\n  _createClass(Record, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(When, {\n        condition: this.props.schemas[this.props.model],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Form, {\n        schema: this.props.schemas[this.props.model] || {},\n        uiSchema: uiSchema,\n        formData: this.props.record,\n        onChange: this.handleChange,\n        onSubmit: this.handleSubmit,\n        onError: this.handleError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      if (props.model && !props.schemas[props.model]) {\n        var url = \"\".concat(API, \"/\").concat(props.model, \"/schema\");\n        props.getSchema(props.model, url);\n      }\n\n      return {};\n    }\n  }]);\n\n  return Record;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    record: state.records.record,\n    schemas: state.records.schemas,\n    model: state.records.model\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, getState) {\n  return {\n    getRecord: function getRecord(url) {\n      return dispatch(actions.getRecord(url));\n    },\n    getSchema: function getSchema(model, url) {\n      return dispatch(actions.getSchema(model, url));\n    },\n    post: function post(model, url, record) {\n      return dispatch(actions.post(model, url, record));\n    },\n    put: function put(model, url, record) {\n      return dispatch(actions.put(model, url, record));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Record);","map":{"version":3,"sources":["/Users/TannerSeramur/CodeFellows/401/labs/35-project-cms/starter-code-cms-redux/src/components/cms/record.js"],"names":["React","connect","Form","When","actions","API","process","env","REACT_APP_API","uiSchema","_id","__v","Record","props","handleError","error","console","handleSubmit","form","formData","url","model","put","post","state","schemas","record","handleChange","getSchema","Component","mapStateToProps","records","mapDispatchToProps","dispatch","getState","getRecord"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Form from \"react-jsonschema-form\";\nimport { When } from \"../if\";\n\nimport * as actions from \"./actions.js\";\n\nconst API = process.env.REACT_APP_API;\n\n// Auto-Hide some of the mongo specific fields\nconst uiSchema = {\n  _id: { \"ui:widget\": \"hidden\" },\n  __v: { \"ui:widget\": \"hidden\" }\n};\n\nclass Record extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { schemas: {} };\n  }\n\n  // Runs whenever props change (pre-render)\n  static getDerivedStateFromProps(props, state) {\n    if (props.model && !props.schemas[props.model]) {\n      let url = `${API}/${props.model}/schema`;\n      props.getSchema(props.model, url);\n    }\n    return {};\n  }\n\n\n  handleError = error => {\n    console.error(error);\n  };\n\n  handleSubmit = form => {\n    if (form.formData._id) {\n      let url = `${API}/${this.props.model}/${form.formData._id}`;\n      this.props.put(this.props.model, url, form.formData);\n    } else {\n      let url = `${API}/${this.props.model}`;\n      this.props.post(this.props.model, url, form.formData);\n    }\n  };\n\n  render() {\n    return (\n      <When condition={this.props.schemas[this.props.model]}>\n        <Form\n          schema={this.props.schemas[this.props.model] || {}}\n          uiSchema={uiSchema}\n          formData={this.props.record}\n          onChange={this.handleChange}\n          onSubmit={this.handleSubmit}\n          onError={this.handleError}\n        />\n      </When>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  record: state.records.record,\n  schemas: state.records.schemas,\n  model: state.records.model\n});\n\nconst mapDispatchToProps = (dispatch, getState) => ({\n  getRecord: url => dispatch(actions.getRecord(url)),\n  getSchema: (model, url) => dispatch(actions.getSchema(model, url)),\n  post: (model, url, record) => dispatch(actions.post(model, url, record)),\n  put: (model, url, record) => dispatch(actions.put(model, url, record))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Record);\n"]},"metadata":{},"sourceType":"module"}