{"ast":null,"code":"import _toConsumableArray from \"/Users/TannerSeramur/CodeFellows/401/labs/35-project-cms/starter-code-cms-redux/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/TannerSeramur/CodeFellows/401/labs/35-project-cms/starter-code-cms-redux/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/TannerSeramur/CodeFellows/401/labs/35-project-cms/starter-code-cms-redux/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar initialState = {\n  model: null,\n  models: [],\n  records: [],\n  schemas: {},\n  record: {}\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var type = action.type,\n      payload = action.payload;\n\n  switch (type) {\n    case \"MODEL\":\n      return _objectSpread({}, state, {\n        model: payload\n      });\n\n    case \"SCHEMA\":\n      return _objectSpread({}, state, {\n        schemas: _objectSpread({}, state.schemas, _defineProperty({}, payload.model, payload.schema))\n      });\n\n    case \"MODELS\":\n      console.log('modaaaals');\n      return _objectSpread({}, state, {\n        models: payload\n      });\n\n    case \"RECORDS\":\n      console.log('in RECORDS');\n      return _objectSpread({}, state, {\n        records: payload\n      });\n\n    case \"CLEAR\":\n      console.log('clearrrrr');\n      return state;\n\n    case \"RECORD\":\n      return _objectSpread({}, state, {\n        record: payload\n      });\n\n    case \"POST\":\n      return _objectSpread({}, state, {\n        records: [].concat(_toConsumableArray(state.records), [payload.record])\n      });\n\n    case \"PUT\":\n      var updatedRecords = state.records.map(function (record) {\n        return record._id === payload.record._id ? payload.record : record;\n      });\n      return _objectSpread({}, state, {\n        records: updatedRecords\n      });\n\n    case \"DELETE\":\n      var filteredRecords = state.records.filter(function (record) {\n        return record._id !== payload.id;\n      });\n      return _objectSpread({}, state, {\n        records: filteredRecords\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/TannerSeramur/CodeFellows/401/labs/35-project-cms/starter-code-cms-redux/src/components/cms/reducers.js"],"names":["initialState","model","models","records","schemas","record","state","action","type","payload","schema","console","log","updatedRecords","map","_id","filteredRecords","filter","id"],"mappings":";;;AAAA,IAAIA,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,IADU;AAEjBC,EAAAA,MAAM,EAAE,EAFS;AAGjBC,EAAAA,OAAO,EAAE,EAHQ;AAIjBC,EAAAA,OAAO,EAAE,EAJQ;AAKjBC,EAAAA,MAAM,EAAE;AALS,CAAnB;AAQA,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;AAAA,MACzCC,IADyC,GACvBD,MADuB,CACzCC,IADyC;AAAA,MACnCC,OADmC,GACvBF,MADuB,CACnCE,OADmC;;AAG/C,UAAQD,IAAR;AACE,SAAK,OAAL;AACE,+BAAYF,KAAZ;AAAmBL,QAAAA,KAAK,EAAEQ;AAA1B;;AAEF,SAAK,QAAL;AACE,+BACKH,KADL;AAEEF,QAAAA,OAAO,oBAAOE,KAAK,CAACF,OAAb,sBAAuBK,OAAO,CAACR,KAA/B,EAAuCQ,OAAO,CAACC,MAA/C;AAFT;;AAKF,SAAK,QAAL;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AAEA,+BAAYN,KAAZ;AAAmBJ,QAAAA,MAAM,EAAEO;AAA3B;;AAEF,SAAK,SAAL;AACEE,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,+BAAYN,KAAZ;AAAmBH,QAAAA,OAAO,EAAEM;AAA5B;;AAEF,SAAK,OAAL;AACEE,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AAEA,aAAON,KAAP;;AAEF,SAAK,QAAL;AACE,+BAAYA,KAAZ;AAAmBD,QAAAA,MAAM,EAAEI;AAA3B;;AAEF,SAAK,MAAL;AACE,+BAAYH,KAAZ;AAAmBH,QAAAA,OAAO,+BAAMG,KAAK,CAACH,OAAZ,IAAqBM,OAAO,CAACJ,MAA7B;AAA1B;;AAEF,SAAK,KAAL;AACE,UAAIQ,cAAc,GAAGP,KAAK,CAACH,OAAN,CAAcW,GAAd,CAAkB,UAAAT,MAAM;AAAA,eAC3CA,MAAM,CAACU,GAAP,KAAeN,OAAO,CAACJ,MAAR,CAAeU,GAA9B,GAAoCN,OAAO,CAACJ,MAA5C,GAAqDA,MADV;AAAA,OAAxB,CAArB;AAGA,+BAAYC,KAAZ;AAAmBH,QAAAA,OAAO,EAAEU;AAA5B;;AAEF,SAAK,QAAL;AACE,UAAIG,eAAe,GAAGV,KAAK,CAACH,OAAN,CAAcc,MAAd,CACpB,UAAAZ,MAAM;AAAA,eAAIA,MAAM,CAACU,GAAP,KAAeN,OAAO,CAACS,EAA3B;AAAA,OADc,CAAtB;AAGA,+BAAYZ,KAAZ;AAAmBH,QAAAA,OAAO,EAAEa;AAA5B;;AAEF;AACE,aAAOV,KAAP;AA3CJ;AA6CD,CAhDD","sourcesContent":["let initialState = {\n  model: null,\n  models: [],\n  records: [],\n  schemas: {},\n  record: {},\n};\n\nexport default (state = initialState, action) => {\n  let { type, payload } = action;\n\n  switch (type) {\n    case \"MODEL\":\n      return { ...state, model: payload };\n\n    case \"SCHEMA\":\n      return {\n        ...state,\n        schemas: { ...state.schemas, [payload.model]: payload.schema }\n      };\n\n    case \"MODELS\":\n      console.log('modaaaals');\n\n      return { ...state, models: payload };\n\n    case \"RECORDS\":\n      console.log('in RECORDS');\n      return { ...state, records: payload };\n\n    case \"CLEAR\":\n      console.log('clearrrrr');\n\n      return state;\n\n    case \"RECORD\":\n      return { ...state, record: payload };\n\n    case \"POST\":\n      return { ...state, records: [...state.records, payload.record] };\n\n    case \"PUT\":\n      let updatedRecords = state.records.map(record =>\n        record._id === payload.record._id ? payload.record : record\n      );\n      return { ...state, records: updatedRecords };\n\n    case \"DELETE\":\n      let filteredRecords = state.records.filter(\n        record => record._id !== payload.id\n      );\n      return { ...state, records: filteredRecords };\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}